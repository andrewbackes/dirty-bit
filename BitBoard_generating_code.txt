/*

Generated by code:


#include <iostream>
#include <fstream>

using namespace std;

int main() {

	ofstream myfile;
	myfile.open ("output.txt");
	
	unsigned long long file[8] = {72340172838076673, 144680345676153346,289360691352306692, 578721382704613384, 1157442765409226768, 2314885530818453536, 4629771061636907072, 9259542123273814144};
	unsigned long long rank[9] = {0, 255, 65280, 16711680, 4278190080, 1095216660480, 280375465082880, 71776119061217280, 18374686479671623680};
	
	unsigned long long square[64] = {1,2, 4, 8, 16, 32, 64, 128, 
						256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 
						65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 
						16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648, 
						4294967296, 8589934592, 17179869184, 34359738368, 68719476736, 137438953472, 274877906944, 549755813888, 
						1099511627776, 2199023255552, 4398046511104, 8796093022208, 17592186044416, 35184372088832, 70368744177664, 140737488355328, 
						281474976710656, 562949953421312, 1125899906842624, 2251799813685248, 4503599627370496, 9007199254740992, 18014398509481984, 36028797018963968,
						72057594037927936, 144115188075855872, 288230376151711744, 576460752303423488, 1152921504606846976, 2305843009213693952, 4611686018427387904, 9223372036854775808 };
	
//------------------------------------------------
	unsigned long long south[64];	
	myfile << "const bitboard south[64] = {";
	
	for(int i =0; i<64; i++) {
		south[i] = 0;
		for(int j = i-8; j>=0; j-=8)
			south[i] = south[i] | square[j];
			
		myfile << south[i];
		if( i != 63) 
			myfile << ", ";
	}
	myfile << "};" << endl << endl;
//------------------------------------------------	
	unsigned long long west[64];
	myfile << "const bitboard west[64] = {";
	//West:
	for(int i =0; i<64; i++) {
		west[i] = 0;
		int p = 1;
		while((i+p)%8 != 0){
			west[i] = west[i] |square[i+p];
			p++;
		}
		
		myfile << west[i];
		if( i != 63)
			myfile << ", ";
	}
	myfile << "};" << endl << endl;
//------------------------------------------------
	unsigned long long east[64];
	myfile << "const bitboard east[64] = {";
	for(int i =0; i<64; i++) {
		//East:
		east[i] = 0;
		int p = 1;
		while((i-p+1)%8 != 0){
			east[i] = east[i] | square[i-p];
			p++;
		}

		myfile << east[i];
		if( i != 63)
			 myfile << ", ";
	}
	myfile << "};" << endl << endl;
//------------------------------------------------
	unsigned long long nw[64];	//+9
	myfile << "const bitboard nw[64] = {";
	
	for(int i =0; i<64; i++) {
		nw[i] = 0;
		bool offboard = false;
		for(int j=(i+9); j<64; j+=9){
			
			if((j)%8 == 0)
				offboard = true;
			if (!offboard)
				nw[i] = nw[i] | square[j];
		}
		myfile << nw[i];
		if( i != 63) 
			myfile << ", ";
	}
	myfile << "};" << endl << endl;
//------------------------------------------------
	unsigned long long ne[64];	//+7
	myfile << "const bitboard ne[64] = {";
	
	for(int i =0; i<64; i++) {
		ne[i] = 0;
		bool offboard = false;
		for(int j=(i+7); j<64; j+=7){
			if((j+1)%8 == 0)
				offboard = true;
			if (!offboard)
				ne[i] = ne[i] | square[j];
		}
		myfile << ne[i];
		if( i != 63) 
			myfile << ", ";
	}
	myfile << "};" << endl << endl;
//------------------------------------------------
	unsigned long long se[64];	//-9
	myfile << "const bitboard se[64] = {";
	
	for(int i =0; i<64; i++) {
		se[i]=0;
		bool offboard = false;
		for(int j=(i-9); j>=0; j-=9){
			if((j+1)%8 == 0)
				offboard = true;
			if (!offboard)
				se[i] = se[i] | square[j];
		}
		myfile << se[i];
		if( i != 63) 
			myfile << ", ";
	}
	myfile << "};" << endl << endl;
//------------------------------------------------
	unsigned long long sw[64];	//-7
	myfile << "const bitboard sw[64] = {";
	
	for(int i =0; i<64; i++) {
		sw[i]=0;
		bool offboard = false;
		for(int j=(i-7); j>=0; j-=7) {
			if((j)%8 == 0)
				offboard = true;
			if (!offboard)
				sw[i] = sw[i] | square[j];
		}
		myfile << sw[i];
		if( i != 63) 
			myfile << ", ";
	}
	myfile << "};" << endl << endl;
//------------------------------------------------
	unsigned long long knight_moves[64];	//
	myfile << "const bitboard knight_moves[64] = {";
	// {-6,-15, 10, 17, -10, -17, 6, 15};
	for(int i =0; i<64; i++) {
		knight_moves[i]=0;
		int j=i-6;
		if((i >= 8)&& (i%8)<=5)
			knight_moves[i] = knight_moves[i] | square[j];
		j=i-15;
		if((i >= 16)&& (i%8)<=6)
			knight_moves[i] = knight_moves[i] | square[j];
		j=i-10;
		if((i >= 8)&& (i%8)>=2)
			knight_moves[i] = knight_moves[i] | square[j];
		j=i-17;
		if((i >= 16)&& (i%8)>=1)
			knight_moves[i] = knight_moves[i] | square[j];		
		j=i+6;
		if((i <= 55)&& (i%8)>=2)
			knight_moves[i] = knight_moves[i] | square[j];
		j=i+15;
		if((i <= 47)&& (i%8)>=1)
			knight_moves[i] = knight_moves[i] | square[j];
		j=i+10;
		if((i <= 53)&& (i%8)<=5)
			knight_moves[i] = knight_moves[i] | square[j];
		j=i+17;
		if((i <= 46)&& (i%8)<=6)
			knight_moves[i] = knight_moves[i] | square[j];

		myfile << knight_moves[i];
		if( i != 63) 
			myfile << ", ";
	}
	myfile << "};" << endl << endl;
//------------------------------------------------
	
	unsigned long long pawn_advances[2][64];
	myfile << "const bitboard pawn_advances[2][64] = {{";
	for(int i =0; i<64; i++) {
		pawn_advances[0][i]=0;
		if(i<=55)
			pawn_advances[0][i] = pawn_advances[0][i] | square[i+8];
		myfile << pawn_advances[0][i];
		
		if( i != 63) 
			myfile << ", ";
	}
	myfile << "},{";
	for(int i =0; i<64; i++) {
		pawn_advances[1][i]=0;
		if(i>=8)
			pawn_advances[1][i] = pawn_advances[1][i] | square[i-8];
		myfile << pawn_advances[1][i];
		
		if( i != 63) 
			myfile << ", ";
	}
	myfile << "}};" << endl;
	
//------------------------------------------------
	unsigned long long king_moves[64];	//
	myfile << "const bitboard king_moves[64] = {";
	// {9, 8, 7, 1, -1, -7, -8, -9};
	for(int i =0; i<64; i++) {
		king_moves[i]=0;
		
		int j=i+9;
		if((i <= 54)&& (i%8)<=6)
			king_moves[i] = king_moves[i] | square[j];
		j=i+8;
		if(i <= 55)
			king_moves[i] = king_moves[i] | square[j];
		j=i+7;
		if((i <= 55)&& (i%8)>=1)
			king_moves[i] = king_moves[i] | square[j];
		j=i+1;
		if((i%8)<=6)
			king_moves[i] = king_moves[i] | square[j];
		j=i-1;
		if((i%8)>=1)
			king_moves[i] = king_moves[i] | square[j];
		j=i-7;
		if((i >= 8) && (i%8)<=6)
			king_moves[i] = king_moves[i] | square[j];
		j=i-8;
		if(i >= 8)
			king_moves[i] = king_moves[i] | square[j];
		j=i-9;
		if((i >= 9)&& (i%8)>=1)
			king_moves[i] = king_moves[i] | square[j];

		myfile << king_moves[i];
		if( i != 63) 
			myfile << ", ";
	}
	myfile << "};" << endl << endl;
//------------------------------------------------
	
	unsigned long long pawn_captures[2][64];
	myfile << "const bitboard pawn_captures[2][64] = {{";
	for(int i =0; i<64; i++) {
		pawn_captures[0][i]=0;
		if((i<=55) && (i%8<=6))
			pawn_captures[0][i] = pawn_captures[0][i] | square[i+9];
		if((i<=55) && (i%8>=1))
			pawn_captures[0][i] = pawn_captures[0][i] | square[i+7];
		
		myfile << pawn_captures[0][i];
		
		if( i != 63) 
			myfile << ", ";
	}
	myfile << "},{";
	for(int i =0; i<64; i++) {
		pawn_captures[1][i]=0;
		if((i>=8) && (i%8>=1))
			pawn_captures[1][i] = pawn_captures[1][i] | square[i-9];
		if((i>=8) && (i%8<=6))
			pawn_captures[1][i] = pawn_captures[1][i] | square[i-7];

		myfile << pawn_captures[1][i];
		
		if( i != 63) 
			myfile << ", ";
	}
	myfile << "}};" << endl;

	/*
	bitboard x = mask::square[b1] | mask::square[c1] | mask::square[d1];
	bitboard y = mask::square[b8]|mask::square[c8]|mask::square[d8] ;
	cout << "const bitboard qCastle_path[2] = {{" << 
		x << "},{" <<
		y << "}};" << endl;
	x = mask::square[f1]|mask::square[g1];
	y = mask::square[f8]|mask::square[g8];
	cout <<"const bitboard kCastle_path[2] = {{" <<
		x << "},{" <<
		y << "}};" << endl;
	*/

	cout << "Done!\n";
	system("PAUSE");
	
	myfile.close();
	return(0);

}


/*