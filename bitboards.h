#ifndef bitboard_h
#define bitboard_h

#include "parameters.h"

typedef unsigned long long bitboard;
typedef unsigned char bitrow;
typedef unsigned long long phash_lock;

enum { h=0,g,f,e,d,c,b,a };

enum {	
		h1,g1,f1,e1,d1,c1,b1,a1,
		h2,g2,f2,e2,d2,c2,b2,a2,
		h3,g3,f3,e3,d3,c3,b3,a3,
		h4,g4,f4,e4,d4,c4,b4,a4,
		h5,g5,f5,e5,d5,c5,b5,a5,
		h6,g6,f6,e6,d6,c6,b6,a6,
		h7,g7,f7,e7,d7,c7,b7,a7,
		h8,g8,f8,e8,d8,c8,b8,a8
	};


namespace mask {
	const bitboard file[8] = {72340172838076673ull, 144680345676153346ull,289360691352306692ull, 578721382704613384ull, 1157442765409226768ull, 2314885530818453536ull, 4629771061636907072ull, 9259542123273814144ull};
	const bitboard rank[9] = {0ull, 255ull, 65280ull, 16711680ull, 4278190080ull, 1095216660480ull, 280375465082880ull, 71776119061217280ull, 18374686479671623680ull};
	const bitboard square[65] = {1ull,2ull, 4ull, 8ull, 16ull, 32ull, 64ull, 128ull,
						256ull, 512ull, 1024ull, 2048ull, 4096ull, 8192ull, 16384ull, 32768ull,
						65536ull, 131072ull, 262144ull, 524288ull, 1048576ull, 2097152ull, 4194304ull, 8388608ull,
						16777216ull, 33554432ull, 67108864, 134217728, 268435456, 536870912, 1073741824, 2147483648,
						4294967296ull, 8589934592ull, 17179869184ull, 34359738368ull, 68719476736ull, 137438953472ull, 274877906944ull, 549755813888ull,
						1099511627776ull, 2199023255552ull, 4398046511104ull, 8796093022208ull, 17592186044416ull, 35184372088832ull, 70368744177664ull, 140737488355328ull,
						281474976710656ull, 562949953421312ull, 1125899906842624ull, 2251799813685248ull, 4503599627370496ull, 9007199254740992ull, 18014398509481984ull, 36028797018963968ull,
						72057594037927936ull, 144115188075855872ull, 288230376151711744ull, 576460752303423488ull, 1152921504606846976ull, 2305843009213693952ull, 4611686018427387904ull, 9223372036854775808ull, 0ull };
	const bitboard north[65] = {72340172838076672ull,144680345676153344ull,289360691352306688ull,578721382704613376ull,1157442765409226752ull,2314885530818453504ull,4629771061636907008ull,9259542123273814016ull,72340172838076416ull,144680345676152832ull,289360691352305664ull,578721382704611328ull,1157442765409222656ull,2314885530818445312ull,4629771061636890624ull,9259542123273781248ull,72340172838010880ull,144680345676021760ull,289360691352043520ull,578721382704087040ull,1157442765408174080ull,2314885530816348160ull,4629771061632696320ull,9259542123265392640ull,72340172821233664ull,144680345642467328ull,289360691284934656ull,578721382569869312ull,1157442765139738624ull,2314885530279477248ull,4629771060558954496ull,9259542121117908992ull,72340168526266368ull,144680337052532736ull,289360674105065472ull,578721348210130944ull,1157442696420261888ull,2314885392840523776ull,4629770785681047552ull,9259541571362095104ull,72339069014638592ull,144678138029277184ull,289356276058554368ull,578712552117108736ull,1157425104234217472ull,2314850208468434944ull,4629700416936869888ull,9259400833873739776ull,72057594037927936ull,144115188075855872ull,288230376151711744ull,576460752303423488ull,1152921504606846976ull,2305843009213693952ull,4611686018427387904ull,9223372036854775808ull,0,0,0,0,0,0,0,0,0};
	const bitboard east[65] = {0, 1ull, 3ull, 7ull, 15ull, 31ull, 63ull, 127ull, 0ull, 256ull, 768ull, 1792ull, 3840ull, 7936ull, 16128ull, 32512ull, 0ull, 65536ull, 196608ull, 458752ull, 983040ull, 2031616ull, 4128768ull, 8323072ull, 0, 16777216ull, 50331648ull, 117440512ull, 251658240ull, 520093696ull, 1056964608ull, 2130706432ull, 0, 4294967296ull, 12884901888ull, 30064771072ull, 64424509440ull, 133143986176ull, 270582939648ull, 545460846592ull, 0, 1099511627776ull, 3298534883328ull, 7696581394432ull, 16492674416640ull, 34084860461056ull, 69269232549888ull, 139637976727552ull, 0, 281474976710656ull, 844424930131968ull, 1970324836974592ull, 4222124650659840ull, 8725724278030336ull, 17732923532771328ull, 35747322042253312ull, 0, 72057594037927936ull, 216172782113783808ull, 504403158265495552ull, 1080863910568919040ull, 2233785415175766016ull, 4539628424389459968ull, 9151314442816847872ull,0};
	const bitboard south[65] = {0ull, 0ull, 0ull, 0ull, 0ull, 0ull, 0ull, 0ull, 1ull, 2ull, 4ull, 8ull, 16ull, 32ull, 64ull, 128ull, 257ull, 514ull, 1028ull, 2056ull, 4112ull, 8224ull, 16448ull, 32896ull, 65793ull, 131586ull, 263172ull, 526344ull, 1052688ull, 2105376ull, 4210752ull, 8421504ull, 16843009ull, 33686018ull, 67372036ull, 134744072ull, 269488144ull, 538976288ull, 1077952576ull, 2155905152ull, 4311810305ull, 8623620610ull, 17247241220ull, 34494482440ull, 68988964880ull, 137977929760ull, 275955859520ull, 551911719040ull, 1103823438081ull, 2207646876162ull, 4415293752324ull, 8830587504648ull, 17661175009296ull, 35322350018592ull, 70644700037184ull, 141289400074368ull, 282578800148737ull, 565157600297474ull, 1130315200594948ull, 2260630401189896ull, 4521260802379792ull, 9042521604759584ull, 18085043209519168ull, 36170086419038336ull, 0ull};
	const bitboard west[65] = {254ull,  252ull,  248ull,  240ull,  224ull,  192ull,  128ull,  0ull,  65024ull,  64512ull,  63488ull,  61440ull,  57344ull,  49152ull,  32768ull,  0ull,  16646144ull,  16515072ull,  16252928ull,  15728640ull,  14680064ull,  12582912ull,  8388608ull,  0ull,  4261412864ull,  4227858432ull,  4160749568ull,  4026531840ull,  3758096384ull,  3221225472ull,  2147483648ull,  0ull,  1090921693184ull,  1082331758592ull,  1065151889408ull,  1030792151040ull,  962072674304ull,  824633720832ull,  549755813888ull,  0ull,  279275953455104ull,  277076930199552ull,  272678883688448ull,  263882790666240ull,  246290604621824ull,  211106232532992ull,  140737488355328ull,  0ull,  71494644084506624ull,  70931694131085312ull,  69805794224242688ull,  67553994410557440ull,  63050394783186944ull,  54043195528445952ull,  36028797018963968ull,  0ull,  18302628885633695744ull,  18158513697557839872ull,  17870283321406128128ull,  17293822569102704640ull,  16140901064495857664ull,  13835058055282163712ull,  9223372036854775808ull,  0ull, 0ull};
	const bitboard nw[65] = {9241421688590303744ull,  36099303471055872ull,  141012904183808ull,  550831656960ull,  2151686144ull,  8404992ull,  32768ull,  0ull,  4620710844295151616ull,  9241421688590303232ull,  36099303471054848ull,  141012904181760ull,  550831652864ull,  2151677952ull,  8388608ull,  0ull,  2310355422147510272ull,  4620710844295020544ull,  9241421688590041088ull,  36099303470530560ull,  141012903133184ull,  550829555712ull,  2147483648ull,  0ull,  1155177711056977920ull,  2310355422113955840ull,  4620710844227911680ull,  9241421688455823360ull,  36099303202095104ull,  141012366262272ull,  549755813888ull,  0ull,  577588851233521664ull,  1155177702467043328ull,  2310355404934086656ull,  4620710809868173312ull,  9241421619736346624ull,  36099165763141632ull,  140737488355328ull,  0ull,  288793326105133056ull,  577586652210266112ull,  1155173304420532224ull,  2310346608841064448ull,  4620693217682128896ull,  9241386435364257792ull,  36028797018963968ull,  0ull,  144115188075855872ull,  288230376151711744ull,  576460752303423488ull,  1152921504606846976ull,  2305843009213693952ull,  4611686018427387904ull,  9223372036854775808ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull, 0ull};
	const bitboard ne[65] = {0ull,  256ull,  66048ull,  16909312ull,  4328785920ull,  1108169199616ull,  283691315109888ull,  72624976668147712ull,  0ull,  65536ull,  16908288ull,  4328783872ull,  1108169195520ull,  283691315101696ull,  72624976668131328ull,  145249953336262656ull,  0ull,  16777216ull,  4328521728ull,  1108168671232ull,  283691314053120ull,  72624976666034176ull,  145249953332068352ull,  290499906664136704ull,  0ull,  4294967296ull,  1108101562368ull,  283691179835392ull,  72624976397598720ull,  145249952795197440ull,  290499905590394880ull,  580999811180789760ull,  0ull,  1099511627776ull,  283673999966208ull,  72624942037860352ull,  145249884075720704ull,  290499768151441408ull,  580999536302882816ull,  1161999072605765632ull,  0ull,  281474976710656ull,  72620543991349248ull,  145241087982698496ull,  290482175965396992ull,  580964351930793984ull,  1161928703861587968ull,  2323857407723175936ull,  0ull,  72057594037927936ull,  144115188075855872ull,  288230376151711744ull,  576460752303423488ull,  1152921504606846976ull,  2305843009213693952ull,  4611686018427387904ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull, 0ull};
	const bitboard se[65] = {0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  1ull,  2ull,  4ull,  8ull,  16ull,  32ull,  64ull,  0ull,  256ull,  513ull,  1026ull,  2052ull,  4104ull,  8208ull,  16416ull,  0ull,  65536ull,  131328ull,  262657ull,  525314ull,  1050628ull,  2101256ull,  4202512ull,  0ull,  16777216ull,  33619968ull,  67240192ull,  134480385ull,  268960770ull,  537921540ull,  1075843080ull,  0ull,  4294967296ull,  8606711808ull,  17213489152ull,  34426978560ull,  68853957121ull,  137707914242ull,  275415828484ull,  0ull,  1099511627776ull,  2203318222848ull,  4406653222912ull,  8813306511360ull,  17626613022976ull,  35253226045953ull,  70506452091906ull,  0ull,  281474976710656ull,  564049465049088ull,  1128103225065472ull,  2256206466908160ull,  4512412933881856ull,  9024825867763968ull,  18049651735527937ull, 0ull};
	const bitboard sw[65] = {0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  2ull,  4ull,  8ull,  16ull,  32ull,  64ull,  128ull,  0ull,  516ull,  1032ull,  2064ull,  4128ull,  8256ull,  16512ull,  32768ull,  0ull,  132104ull,  264208ull,  528416ull,  1056832ull,  2113664ull,  4227072ull,  8388608ull,  0ull,  33818640ull,  67637280ull,  135274560ull,  270549120ull,  541097984ull,  1082130432ull,  2147483648ull,  0ull,  8657571872ull,  17315143744ull,  34630287488ull,  69260574720ull,  138521083904ull,  277025390592ull,  549755813888ull,  0ull,  2216338399296ull,  4432676798592ull,  8865353596928ull,  17730707128320ull,  35461397479424ull,  70918499991552ull,  140737488355328ull,  0ull,  567382630219904ull,  1134765260439552ull,  2269530520813568ull,  4539061024849920ull,  9078117754732544ull,  18155135997837312ull,  36028797018963968ull,  0ull, 0ull};
	const bitboard pawn_captures[2][65] = {{512ull,  1280ull,  2560ull,  5120ull,  10240ull,  20480ull,  40960ull,  16384ull,  131072ull,  327680ull,  655360ull,  1310720ull,  2621440ull,  5242880ull,  10485760ull,  4194304ull,  33554432ull,  83886080ull,  167772160ull,  335544320ull,  671088640ull,  1342177280ull,  2684354560ull,  1073741824ull,  8589934592ull,  21474836480ull,  42949672960ull,  85899345920ull,  171798691840ull,  343597383680ull,  687194767360ull,  274877906944ull,  2199023255552ull,  5497558138880ull,  10995116277760ull,  21990232555520ull,  43980465111040ull,  87960930222080ull,  175921860444160ull,  70368744177664ull,  562949953421312ull,  1407374883553280ull,  2814749767106560ull,  5629499534213120ull,  11258999068426240ull,  22517998136852480ull,  45035996273704960ull,  18014398509481984ull,  144115188075855872ull,  360287970189639680ull,  720575940379279360ull,  1441151880758558720ull,  2882303761517117440ull,  5764607523034234880ull,  11529215046068469760ull,  4611686018427387904ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull, 0ull},{0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  2ull,  5ull,  10ull,  20ull,  40ull,  80ull,  160ull,  64ull,  512ull,  1280ull,  2560ull,  5120ull,  10240ull,  20480ull,  40960ull,  16384ull,  131072ull,  327680ull,  655360ull,  1310720ull,  2621440ull,  5242880ull,  10485760ull,  4194304ull,  33554432ull,  83886080ull,  167772160ull,  335544320ull,  671088640ull,  1342177280ull,  2684354560ull,  1073741824ull,  8589934592ull,  21474836480ull,  42949672960ull,  85899345920ull,  171798691840ull,  343597383680ull,  687194767360ull,  274877906944ull,  2199023255552ull,  5497558138880ull,  10995116277760ull,  21990232555520ull,  43980465111040ull,  87960930222080ull,  175921860444160ull,  70368744177664ull,  562949953421312ull,  1407374883553280ull,  2814749767106560ull,  5629499534213120ull,  11258999068426240ull,  22517998136852480ull,  45035996273704960ull,  18014398509481984ull, 0ull}};
	const bitboard king_moves[65] = {770ull,  1797ull,  3594ull,  7188ull,  14376ull,  28752ull,  57504ull,  49216ull,  197123ull,  460039ull,  920078ull,  1840156ull,  3680312ull,  7360624ull,  14721248ull,  12599488ull,  50463488ull,  117769984ull,  235539968ull,  471079936ull,  942159872ull,  1884319744ull,  3768639488ull,  3225468928ull,  12918652928ull,  30149115904ull,  60298231808ull,  120596463616ull,  241192927232ull,  482385854464ull,  964771708928ull,  825720045568ull,  3307175149568ull,  7718173671424ull,  15436347342848ull,  30872694685696ull,  61745389371392ull,  123490778742784ull,  246981557485568ull,  211384331665408ull,  846636838289408ull,  1975852459884544ull,  3951704919769088ull,  7903409839538176ull,  15806819679076352ull,  31613639358152704ull,  63227278716305408ull,  54114388906344448ull,  216739030602088448ull,  505818229730443264ull,  1011636459460886528ull,  2023272918921773056ull,  4046545837843546112ull,  8093091675687092224ull,  16186183351374184448ull,  13853283560024178688ull,  144959613005987840ull,  362258295026614272ull,  724516590053228544ull,  1449033180106457088ull,  2898066360212914176ull,  5796132720425828352ull,  11592265440851656704ull,  4665729213955833856ull, 0ull};
	const bitboard knight_moves[65] = {132096ull,  329728ull,  659712ull,  1319424ull,  2638848ull,  5277696ull,  10489856ull,  4202496ull,  33816580ull,  84410376ull,  168886289ull,  337772578ull,  675545156ull,  1351090312ull,  2685403152ull,  1075839008ull,  8657044482ull,  21609056261ull,  43234889994ull,  86469779988ull,  172939559976ull,  345879119952ull,  687463207072ull,  275414786112ull,  2216203387392ull,  5531918402816ull,  11068131838464ull,  22136263676928ull,  44272527353856ull,  88545054707712ull,  175990581010432ull,  70506185244672ull,  567348067172352ull,  1416171111120896ull,  2833441750646784ull,  5666883501293568ull,  11333767002587136ull,  22667534005174272ull,  45053588738670592ull,  18049583422636032ull,  145241105196122112ull,  362539804446949376ull,  725361088165576704ull,  1450722176331153408ull,  2901444352662306816ull,  5802888705324613632ull,  11533718717099671552ull,  4620693356194824192ull,  288234782788157440ull,  576469569871282176ull,  1224997833292120064ull,  2449995666584240128ull,  4899991333168480256ull,  9799982666336960512ull,  1152939783987658752ull,  2305878468463689728ull,  1128098930098176ull,  2257297371824128ull,  4796069720358912ull,  9592139440717824ull,  19184278881435648ull,  38368557762871296ull,  4679521487814656ull,  9077567998918656ull, 0ull};
	const bitboard pawn_advances[2][65] = {{256ull,  512ull,  1024ull,  2048ull,  4096ull,  8192ull,  16384ull,  32768ull,  65536ull,  131072ull,  262144ull,  524288ull,  1048576ull,  2097152ull,  4194304ull,  8388608ull,  16777216ull,  33554432ull,  67108864ull,  134217728ull,  268435456ull,  536870912ull,  1073741824ull,  2147483648ull,  4294967296ull,  8589934592ull,  17179869184ull,  34359738368ull,  68719476736ull,  137438953472ull,  274877906944ull,  549755813888ull,  1099511627776ull,  2199023255552ull,  4398046511104ull,  8796093022208ull,  17592186044416ull,  35184372088832ull,  70368744177664ull,  140737488355328ull,  281474976710656ull,  562949953421312ull,  1125899906842624ull,  2251799813685248ull,  4503599627370496ull,  9007199254740992ull,  18014398509481984ull,  36028797018963968ull,  72057594037927936ull,  144115188075855872ull,  288230376151711744ull,  576460752303423488ull,  1152921504606846976ull,  2305843009213693952ull,  4611686018427387904ull,  9223372036854775808ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull},{0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  0ull,  1ull,  2ull,  4ull,  8ull,  16ull,  32ull,  64ull,  128ull,  256ull,  512ull,  1024ull,  2048ull,  4096ull,  8192ull,  16384ull,  32768ull,  65536ull,  131072ull,  262144ull,  524288ull,  1048576ull,  2097152ull,  4194304ull,  8388608ull,  16777216ull,  33554432ull,  67108864ull,  134217728ull,  268435456ull,  536870912ull,  1073741824ull,  2147483648ull,  4294967296ull,  8589934592ull,  17179869184ull,  34359738368ull,  68719476736ull,  137438953472ull,  274877906944ull,  549755813888ull,  1099511627776ull,  2199023255552ull,  4398046511104ull,  8796093022208ull,  17592186044416ull,  35184372088832ull,  70368744177664ull,  140737488355328ull,  281474976710656ull,  562949953421312ull,  1125899906842624ull,  2251799813685248ull,  4503599627370496ull,  9007199254740992ull,  18014398509481984ull,  36028797018963968ull,  0ull}};
	const bitboard pawn_double_advances[2][65] = { {0,0,0,0,0,0,0,0, square[h4],square[g4],square[f4],square[e4],square[d4],square[c4],square[b4],square[a4], 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0}, 
												   {0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, square[h5],square[g5],square[f5],square[e5],square[d5],square[c5],square[b5],square[a5], 0,0,0,0,0,0,0,0, 0}};

	const bitboard royal_rank[2][8] = {{square[0],square[1], square[2], square[3], square[4], square[5], square[6], square[7]},{square[56],square[57],square[58],square[59],square[60],square[61],square[62],square[63]}};

	extern bitboard ray[64][64];

	//For Castling:
	const bitboard qRook_spawn[2] = {square[a1],square[a8]};
	const bitboard kRook_spawn[2] = {square[h1],square[h8]};
	const bitboard kBishop_spawn[2] = {square[f1],square[f8]};
	const bitboard king_spawn[2] = {square[e1],square[e8]};
	const bitboard queen_spawn[2] = {square[d1],square[d8]};
	const bitboard qCastle[2] = {square[c1],square[c8]};
	const bitboard kCastle[2] = {square[g1], square[g8]};
	const bitboard qCastle_path[2] = {112ull,8070450532247928832ull};
	const bitboard kCastle_path[2] = {6ull,432345564227567616ull};
	
	//For en passant:
	const bitboard pawns_spawn[2] = {rank[2],rank[7]};
	const bitboard pawn_double_jump[2] = {rank[4],rank[5]};
	const bitboard pawn_enPassant[2][65] = {{0,0,0,0,0,0,0,0, square[h3],square[g3],square[f3],square[e3],square[d3],square[c3],square[b3],square[a3], 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0,  0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,  square[h6],square[g6],square[f6],square[e6],square[d6],square[c6],square[b6],square[a6], 0,0,0,0,0,0,0,0}};

	//For evaluation:
	const bitboard trapped_rook_short_king[] = { 6ull, 432345564227567616ull };
	const bitboard trapped_rook_short[] = { 259ull, 216454257090494464ull };
	const bitboard trapped_rook_long_king[] = { 96ull, 6917529027641081856ull };
	const bitboard trapped_rook_long[] = { 32960ull, 13871086852301127680ull };
	const bitboard trapped_bishop_long[] = { 9077842876825600ull, 1077944320ull };
	const bitboard trapped_bishop_short[] = { 1128107520032768ull, 33686528ull };
	const bitboard short_castle_area[] = { 7ull, 504403158265495552ull };
	const bitboard long_castle_area[] = { 224ull, 16140901064495857664ull };
	const bitboard between_castle_area[] = { 6168ull, 1736137656351326208ull };
	const bitboard short_castle_pawns[] = { 1792ull ,  1970324836974592ull  };
	const bitboard long_castle_pawns[] = {  57344ull ,  63050394783186944ull  };
	const bitboard mid_castle_pawns[] = { 7168ull , 7881299347898368ull };

	extern bitboard rule_of_the_square[2][64];

	const bitboard isolated_pawn[64] = { 144680345676153346ull, 361700864190383365ull, 723401728380766730ull, 1446803456761533460ull, 2893606913523066920ull, 5787213827046133840ull, 11574427654092267680ull, 4629771061636907072ull, 144680345676153346ull, 361700864190383365ull, 723401728380766730ull, 1446803456761533460ull, 2893606913523066920ull, 5787213827046133840ull, 11574427654092267680ull, 4629771061636907072ull, 144680345676153346ull, 361700864190383365ull, 723401728380766730ull, 1446803456761533460ull, 2893606913523066920ull, 5787213827046133840ull, 11574427654092267680ull, 4629771061636907072ull, 144680345676153346ull, 361700864190383365ull, 723401728380766730ull, 1446803456761533460ull, 2893606913523066920ull, 5787213827046133840ull, 11574427654092267680ull, 4629771061636907072ull, 144680345676153346ull, 361700864190383365ull, 723401728380766730ull, 1446803456761533460ull, 2893606913523066920ull, 5787213827046133840ull, 11574427654092267680ull, 4629771061636907072ull, 144680345676153346ull, 361700864190383365ull, 723401728380766730ull, 1446803456761533460ull, 2893606913523066920ull, 5787213827046133840ull, 11574427654092267680ull, 4629771061636907072ull, 144680345676153346ull, 361700864190383365ull, 723401728380766730ull,1446803456761533460ull, 2893606913523066920ull, 5787213827046133840ull, 11574427654092267680ull, 4629771061636907072ull
	};
	const bitboard passed_pawn[2][64] = {{
			217020518514230016ull, 506381209866536704ull, 1012762419733073408ull, 2025524839466146816ull, 4051049678932293632ull, 8102099357864587264ull, 16204198715729174528ull, 13889313184910721024ull, 217020518514229248ull, 506381209866534912ull, 1012762419733069824ull, 2025524839466139648ull, 4051049678932279296ull, 8102099357864558592ull, 16204198715729117184ull, 13889313184910671872ull, 217020518514032640ull, 506381209866076160ull, 1012762419732152320ull, 2025524839464304640ull, 4051049678928609280ull, 8102099357857218560ull, 16204198715714437120ull, 13889313184898088960ull, 217020518463700992ull, 506381209748635648ull, 1012762419497271296ull, 2025524838994542592ull, 4051049677989085184ull, 8102099355978170368ull, 16204198711956340736ull, 13889313181676863488ull, 217020505578799104ull, 506381179683864576ull, 1012762359367729152ull, 2025524718735458304ull, 4051049437470916608ull, 8102098874941833216ull, 16204197749883666432ull, 13889312357043142656ull, 217017207043915776ull, 506373483102470144ull, 1012746966204940288ull, 2025493932409880576ull, 4050987864819761152ull, 8101975729639522304ull, 16203951459279044608ull, 13889101250810609664ull, 216172782113783808ull, 504403158265495552ull, 1008806316530991104ull, 2017612633061982208ull, 4035225266123964416ull, 8070450532247928832ull, 16140901064495857664ull, 13835058055282163712ull, 0ull, 0ull, 0ull, 0ull, 0ull, 0ull, 0ull, 0ull
		},{
			0ull, 0ull, 0ull, 0ull, 0ull, 0ull, 0ull, 0ull, 3ull, 7ull, 14ull, 28ull, 56ull, 112ull, 224ull, 192ull, 771ull, 1799ull, 3598ull, 7196ull, 14392ull, 28784ull, 57568ull, 49344ull, 197379ull, 460551ull, 921102ull, 1842204ull, 3684408ull, 7368816ull, 14737632ull, 12632256ull, 50529027ull, 117901063ull, 235802126ull, 471604252ull, 943208504ull, 1886417008ull, 3772834016ull, 3233857728ull, 12935430915ull, 30182672135ull, 60365344270ull, 120730688540ull, 241461377080ull, 482922754160ull, 965845508320ull, 827867578560ull, 3311470314243ull, 7726764066567ull, 15453528133134ull, 30907056266268ull, 61814112532536ull, 123628225065072ull, 247256450130144ull, 211934100111552ull, 847736400446211ull, 1978051601041159ull, 3956103202082318ull, 7912206404164636ull, 15824412808329272ull, 31648825616658544ull, 63297651233317088ull, 54255129628557504ull
	}};

	//For Magics:
	

	/*
	const bitboard MagicRookMask[] = {
		0x000101010101017Eull, 0x000202020202027Cull, 0x000404040404047Aull,
		0x0008080808080876ull, 0x001010101010106Eull, 0x002020202020205Eull,
		0x004040404040403Eull, 0x008080808080807Eull, 0x0001010101017E00ull,
		0x0002020202027C00ull, 0x0004040404047A00ull, 0x0008080808087600ull,
		0x0010101010106E00ull, 0x0020202020205E00ull, 0x0040404040403E00ull,
		0x0080808080807E00ull, 0x00010101017E0100ull, 0x00020202027C0200ull,
		0x00040404047A0400ull, 0x0008080808760800ull, 0x00101010106E1000ull,
		0x00202020205E2000ull, 0x00404040403E4000ull, 0x00808080807E8000ull,
		0x000101017E010100ull, 0x000202027C020200ull, 0x000404047A040400ull,
		0x0008080876080800ull, 0x001010106E101000ull, 0x002020205E202000ull,
		0x004040403E404000ull, 0x008080807E808000ull, 0x0001017E01010100ull,
		0x0002027C02020200ull, 0x0004047A04040400ull, 0x0008087608080800ull,
		0x0010106E10101000ull, 0x0020205E20202000ull, 0x0040403E40404000ull,
		0x0080807E80808000ull, 0x00017E0101010100ull, 0x00027C0202020200ull,
		0x00047A0404040400ull, 0x0008760808080800ull, 0x00106E1010101000ull,
		0x00205E2020202000ull, 0x00403E4040404000ull, 0x00807E8080808000ull,
		0x007E010101010100ull, 0x007C020202020200ull, 0x007A040404040400ull,
		0x0076080808080800ull, 0x006E101010101000ull, 0x005E202020202000ull,
		0x003E404040404000ull, 0x007E808080808000ull, 0x7E01010101010100ull,
		0x7C02020202020200ull, 0x7A04040404040400ull, 0x7608080808080800ull,
		0x6E10101010101000ull, 0x5E20202020202000ull, 0x3E40404040404000ull,
		0x7E80808080808000ull
	};

	const bitboard MagicRookNumbers[] = {
		0x0080001020400080ull, 0x0040001000200040ull, 0x0080081000200080ull,
		0x0080040800100080ull, 0x0080020400080080ull, 0x0080010200040080ull,
		0x0080008001000200ull, 0x0080002040800100ull, 0x0000800020400080ull,
		0x0000400020005000ull, 0x0000801000200080ull, 0x0000800800100080ull,
		0x0000800400080080ull, 0x0000800200040080ull, 0x0000800100020080ull,
		0x0000800040800100ull, 0x0000208000400080ull, 0x0000404000201000ull,
		0x0000808010002000ull, 0x0000808008001000ull, 0x0000808004000800ull,
		0x0000808002000400ull, 0x0000010100020004ull, 0x0000020000408104ull,
		0x0000208080004000ull, 0x0000200040005000ull, 0x0000100080200080ull,
		0x0000080080100080ull, 0x0000040080080080ull, 0x0000020080040080ull,
		0x0000010080800200ull, 0x0000800080004100ull, 0x0000204000800080ull,
		0x0000200040401000ull, 0x0000100080802000ull, 0x0000080080801000ull,
		0x0000040080800800ull, 0x0000020080800400ull, 0x0000020001010004ull,
		0x0000800040800100ull, 0x0000204000808000ull, 0x0000200040008080ull,
		0x0000100020008080ull, 0x0000080010008080ull, 0x0000040008008080ull,
		0x0000020004008080ull, 0x0000010002008080ull, 0x0000004081020004ull,
		0x0000204000800080ull, 0x0000200040008080ull, 0x0000100020008080ull,
		0x0000080010008080ull, 0x0000040008008080ull, 0x0000020004008080ull,
		0x0000800100020080ull, 0x0000800041000080ull, 0x00FFFCDDFCED714Aull,
		0x007FFCDDFCED714Aull, 0x003FFFCDFFD88096ull, 0x0000040810002101ull,
		0x0001000204080011ull, 0x0001000204000801ull, 0x0001000082000401ull,
		0x0001FFFAABFAD1A2ull};

		const unsigned char MagicRookShift[] = {
		52, 53, 53, 53, 53, 53, 53, 52,
		53, 54, 54, 54, 54, 54, 54, 53,
		53, 54, 54, 54, 54, 54, 54, 53,
		53, 54, 54, 54, 54, 54, 54, 53,
		53, 54, 54, 54, 54, 54, 54, 53,
		53, 54, 54, 54, 54, 54, 54, 53,
		53, 54, 54, 54, 54, 54, 54, 53,
		53, 54, 54, 53, 53, 53, 53, 53
	};

	*/
	/*
	const bitboard MagicBishopNumbers[] = {
		0x0002020202020200ull, 0x0002020202020000ull, 0x0004010202000000ull,
		0x0004040080000000ull, 0x0001104000000000ull, 0x0000821040000000ull,
		0x0000410410400000ull, 0x0000104104104000ull, 0x0000040404040400ull,
		0x0000020202020200ull, 0x0000040102020000ull, 0x0000040400800000ull,
		0x0000011040000000ull, 0x0000008210400000ull, 0x0000004104104000ull,
		0x0000002082082000ull, 0x0004000808080800ull, 0x0002000404040400ull,
		0x0001000202020200ull, 0x0000800802004000ull, 0x0000800400A00000ull,
		0x0000200100884000ull, 0x0000400082082000ull, 0x0000200041041000ull,
		0x0002080010101000ull, 0x0001040008080800ull, 0x0000208004010400ull,
		0x0000404004010200ull, 0x0000840000802000ull, 0x0000404002011000ull,
		0x0000808001041000ull, 0x0000404000820800ull, 0x0001041000202000ull,
		0x0000820800101000ull, 0x0000104400080800ull, 0x0000020080080080ull,
		0x0000404040040100ull, 0x0000808100020100ull, 0x0001010100020800ull,
		0x0000808080010400ull, 0x0000820820004000ull, 0x0000410410002000ull,
		0x0000082088001000ull, 0x0000002011000800ull, 0x0000080100400400ull,
		0x0001010101000200ull, 0x0002020202000400ull, 0x0001010101000200ull,
		0x0000410410400000ull, 0x0000208208200000ull, 0x0000002084100000ull,
		0x0000000020880000ull, 0x0000001002020000ull, 0x0000040408020000ull,
		0x0004040404040000ull, 0x0002020202020000ull, 0x0000104104104000ull,
		0x0000002082082000ull, 0x0000000020841000ull, 0x0000000000208800ull,
		0x0000000010020200ull, 0x0000000404080200ull, 0x0000040404040400ull,
		0x0002020202020200ull
	};

	const bitboard MagicBishopMask[] = {
		0x0040201008040200ull, 0x0000402010080400ull, 0x0000004020100A00ull,
		0x0000000040221400ull, 0x0000000002442800ull, 0x0000000204085000ull,
		0x0000020408102000ull, 0x0002040810204000ull, 0x0020100804020000ull,
		0x0040201008040000ull, 0x00004020100A0000ull, 0x0000004022140000ull,
		0x0000000244280000ull, 0x0000020408500000ull, 0x0002040810200000ull,
		0x0004081020400000ull, 0x0010080402000200ull, 0x0020100804000400ull,
		0x004020100A000A00ull, 0x0000402214001400ull, 0x0000024428002800ull,
		0x0002040850005000ull, 0x0004081020002000ull, 0x0008102040004000ull,
		0x0008040200020400ull, 0x0010080400040800ull, 0x0020100A000A1000ull,
		0x0040221400142200ull, 0x0002442800284400ull, 0x0004085000500800ull,
		0x0008102000201000ull, 0x0010204000402000ull, 0x0004020002040800ull,
		0x0008040004081000ull, 0x00100A000A102000ull, 0x0022140014224000ull,
		0x0044280028440200ull, 0x0008500050080400ull, 0x0010200020100800ull,
		0x0020400040201000ull, 0x0002000204081000ull, 0x0004000408102000ull,
		0x000A000A10204000ull, 0x0014001422400000ull, 0x0028002844020000ull,
		0x0050005008040200ull, 0x0020002010080400ull, 0x0040004020100800ull,
		0x0000020408102000ull, 0x0000040810204000ull, 0x00000A1020400000ull,
		0x0000142240000000ull, 0x0000284402000000ull, 0x0000500804020000ull,
		0x0000201008040200ull, 0x0000402010080400ull, 0x0002040810204000ull,
		0x0004081020400000ull, 0x000A102040000000ull, 0x0014224000000000ull,
		0x0028440200000000ull, 0x0050080402000000ull, 0x0020100804020000ull,
		0x0040201008040200ull
	};

	const unsigned char MagicBishopShift[] = {
		58, 59, 59, 59, 59, 59, 59, 58,
		59, 59, 59, 59, 59, 59, 59, 59,
		59, 59, 57, 57, 57, 57, 59, 59,
		59, 59, 57, 55, 55, 57, 59, 59,
		59, 59, 57, 55, 55, 57, 59, 59,
		59, 59, 57, 57, 57, 57, 59, 59,
		59, 59, 59, 59, 59, 59, 59, 59,
		58, 59, 59, 59, 59, 59, 59, 58 
	};
	*/
	
	const bitboard MagicRookMask[64] = {
		0x000101010101017e,	0x000202020202027c,	0x000404040404047a,	0x0008080808080876,	
		0x001010101010106e,	0x002020202020205e,	0x004040404040403e,	0x008080808080807e,	0x0001010101017e00,	0x0002020202027c00,	
		0x0004040404047a00,	0x0008080808087600,	0x0010101010106e00,	0x0020202020205e00,	0x0040404040403e00,	0x0080808080807e00,	
		0x00010101017e0100,	0x00020202027c0200,	0x00040404047a0400,	0x0008080808760800,	0x00101010106e1000,	0x00202020205e2000,	
		0x00404040403e4000,	0x00808080807e8000,	0x000101017e010100,	0x000202027c020200,	0x000404047a040400,	0x0008080876080800,	
		0x001010106e101000,	0x002020205e202000,	0x004040403e404000,	0x008080807e808000,	0x0001017e01010100,	0x0002027c02020200,	
		0x0004047a04040400,	0x0008087608080800,	0x0010106e10101000,	0x0020205e20202000,	0x0040403e40404000,	0x0080807e80808000,	
		0x00017e0101010100,	0x00027c0202020200,	0x00047a0404040400,	0x0008760808080800,	0x00106e1010101000,	0x00205e2020202000,	
		0x00403e4040404000,	0x00807e8080808000,	0x007e010101010100,	0x007c020202020200,	0x007a040404040400,	0x0076080808080800,	
		0x006e101010101000,	0x005e202020202000,	0x003e404040404000,	0x007e808080808000,	0x7e01010101010100,	0x7c02020202020200,	
		0x7a04040404040400,	0x7608080808080800,	0x6e10101010101000,	0x5e20202020202000,	0x3e40404040404000,	0x7e80808080808000
	};
		
	
	const bitboard MagicBishopMask[64] = {
		0x0040201008040200, 0x0000402010080400, 0x0000004020100a00, 0x0000000040221400,	
		0x0000000002442800, 0x0000000204085000, 0x0000020408102000, 0x0002040810204000, 0x0020100804020000, 0x0040201008040000,	
		0x00004020100a0000, 0x0000004022140000, 0x0000000244280000, 0x0000020408500000, 0x0002040810200000, 0x0004081020400000,	
		0x0010080402000200, 0x0020100804000400, 0x004020100a000a00, 0x0000402214001400, 0x0000024428002800, 0x0002040850005000,	
		0x0004081020002000, 0x0008102040004000, 0x0008040200020400, 0x0010080400040800, 0x0020100a000a1000, 0x0040221400142200,	
		0x0002442800284400, 0x0004085000500800, 0x0008102000201000, 0x0010204000402000, 0x0004020002040800, 0x0008040004081000,	
		0x00100a000a102000, 0x0022140014224000, 0x0044280028440200, 0x0008500050080400, 0x0010200020100800, 0x0020400040201000,	
		0x0002000204081000, 0x0004000408102000, 0x000a000a10204000, 0x0014001422400000, 0x0028002844020000, 0x0050005008040200,	
		0x0020002010080400, 0x0040004020100800, 0x0000020408102000, 0x0000040810204000, 0x00000a1020400000, 0x0000142240000000,	
		0x0000284402000000, 0x0000500804020000, 0x0000201008040200, 0x0000402010080400, 0x0002040810204000, 0x0004081020400000,	
		0x000a102040000000, 0x0014224000000000, 0x0028440200000000, 0x0050080402000000, 0x0020100804020000, 0x0040201008040200
	};
	
	#ifdef USE_9_12_MAGICS

	#define MAGIC_ROOK_SIZE		4096 //4096 //16384
	#define MAGIC_BISHOP_SIZE	512  //512	 //2048

	const unsigned char MagicRookShift[] = {
		//Dan's 12 bit shifts
		52, 52, 52, 52, 52, 52, 52, 52,
		52, 52, 52, 52, 52, 52, 52, 52,
		52, 52, 52, 52, 52, 52, 52, 52,
		52, 52, 52, 52, 52, 52, 52, 52,
		52, 52, 52, 52, 52, 52, 52, 52,
		52, 52, 52, 52, 52, 52, 52, 52,
		52, 52, 52, 52, 52, 52, 52, 52,
		52, 52, 52, 52, 52, 52, 52, 52
	};	
	
	const bitboard MagicRookNumbers[64]	 = {
		//Dan's 12 bit magics
		0xa8002c000108020, 0x100084000802070, 0x8180048020009000, 0x102002110000800,
		0x100023302040800, 0x220012000884b108, 0x2010158412000040, 0x880004024800100, 0x1a41800010400020, 0xba00500c800,
		0x2000c8120005, 0x200080a002840, 0x2e00600800900c, 0x408004808022204, 0x8002440a24040082, 0x19400244008020,
		0x1003428000108024, 0x81020108003c0100, 0x42800820100100, 0x6c00204200030040, 0x4082000811a40100, 0x4820848820008040,
		0x920100a00004008, 0x2081820000241041, 0x9009214104008000, 0x214016004090, 0x804108040080041, 0x1204024010010440,
		0x828040080020800, 0xd02040028040486, 0x18004c020800100, 0x8000040860044080, 0x8030021008600021, 0x80488100404,
		0x40420110880008, 0x1401401023020580, 0x2041000605000410, 0x3c08400c041000b3, 0x8400120090c02485, 0x10200804002a0,
		0x6100a21402000, 0xa2108008085008, 0x1826080004001000, 0x120040a42002000a, 0xc004128000888, 0x80041004c0,
		0x8140184000442c80, 0x4000010298420004, 0x100403000a51008, 0x8888040900c6020, 0x68000a00200420, 0xb0300a0084400200,
		0x200c02400020040, 0x8030004220508, 0xa04a0001000480, 0x20020008810, 0x11b0080002241, 0xd004284000104901,
		0xd808c200104282, 0x420201a90000805, 0x100900500480001, 0x40004980a440011, 0x110048420520401, 0x800011040280c422
	};
	
	const unsigned char MagicBishopShift[] = {
		//Dan's 9s
		55, 55, 55, 55, 55, 55, 55, 55, 
		55, 55, 55, 55, 55, 55, 55, 55, 
		55, 55, 55, 55, 55, 55, 55, 55, 
		55, 55, 55, 55, 55, 55, 55, 55, 
		55, 55, 55, 55, 55, 55, 55, 55, 
		55, 55, 55, 55, 55, 55, 55, 55, 
		55, 55, 55, 55, 55, 55, 55, 55, 
		55, 55, 55, 55, 55, 55, 55, 55 
	};
	
	const bitboard MagicBishopNumbers[64] =	{	
		// Dan's 9 bit magics
		0x150510001100a407, 0x1020040820240400, 0x4801400808800208, 0x20469c0108004001,
		0x2390084002941, 0x11a120201808041c, 0x185000b00900080, 0x801801080984001, 0x40022a84420201, 0x1000120010304202,
		0x1140004a52008080, 0x860042030281010, 0x405c10000001, 0x300c03022b10214, 0x1212941ac002000, 0x6031210a00a4084,
		0x8000500282300410, 0x8009002800602044, 0x2004000085000600, 0x2060a8f0050004, 0x4410482200500003, 0x82090020d000,
		0xa404006a0500100, 0x2011022040048020, 0x484012041002680, 0x100808020040100, 0xc0050040388080c0, 0x20280201004008,
		0x1001041024008, 0x4058820036220020, 0x600a011022003000, 0x1380380800c12040, 0xa002824040a10420, 0xa02c305108880052,
		0x61000080042, 0x3200020080080080, 0xc2004040000c030, 0x14010020c0000920, 0x20840301011082, 0xa400682204252,
		0x500008010a942080, 0x8004086880320100, 0x34110a6010a00200, 0x86400e20080, 0x808400403000818, 0x1330d02010100020,
		0x21002490030001a, 0x9c1800802a102, 0xcd02280040a10040, 0x2488420820100000, 0x2e11118022010041, 0x1400400a000,
		0x838010440308019, 0x80014304002124, 0x2204848008002, 0x2008452801010100, 0x2040400482200120, 0xa000a208a98,
		0x860244212005060, 0x8400200058410080, 0x10011201002824, 0x4100041080108, 0x4050210a29080040, 0x508204090680
	};
	
	#endif

	#ifdef USE_11_14_MAGICS

	#define MAGIC_ROOK_SIZE		16384 //4096 //16384
	#define MAGIC_BISHOP_SIZE	2048  //512	 //2048

	const unsigned char MagicRookShift[] = {
		//Dan's 14 bit shifts
		50, 50, 50, 50, 50, 50, 50, 50,
		50, 50, 50, 50, 50, 50, 50, 50,
		50, 50, 50, 50, 50, 50, 50, 50,
		50, 50, 50, 50, 50, 50, 50, 50,
		50, 50, 50, 50, 50, 50, 50, 50,
		50, 50, 50, 50, 50, 50, 50, 50,
		50, 50, 50, 50, 50, 50, 50, 50,
		50, 50, 50, 50, 50, 50, 50, 50
	};
	const bitboard MagicRookNumbers[64] = {
	   //Dan's 14 bit magics
		0x3dda061861b36e5c,	0x70594a4b3143359a,	0x68a6220f6daa52c0,	0x1f196c34657d1a44,	
		0x172747536927491e,	0x6616090d5fed34c5,	0x4f0d532c5bc45539,	0x6a8836c7211d7265,	0x04f178936c5f2331,	0x78df04f72cde6d3c,	
		0x7b1078ea3dd343c5,	0x3a230ca030183a5f,	0x32ed299c65442ff4,	0x0762340406a34a5b,	0x01eb26e941bb5af1,	0x4a804e012f943774,	
		0x1e022d3627f025be,	0x6b36729f708f1d33,	0x11097fac38e86b8c,	0x5bed48ac02562374,	0x0b947ab979d001d4,	0x2a154a7079dd57da,	
		0x72f56b9068ee777d,	0x1a430d0a324e09cc,	0x6fe953a831a01a6e,	0x4c036f7959352889,	0x502e565951db4fd0,	0x579a410737fe2965,	
		0x11c27bc471835ee2,	0x461e5067338c082d,	0x78fd076f27b52a75,	0x7e2e50dc44925d39,	0x3afa3bba27204b50,	0x736f216906c22682,	
		0x191613b46fd31f6e,	0x6bda55f23e0d0d65,	0x79595f490bef61d2,	0x398672645ffc1340,	0x7b636659502b707e,	0x58dd45ed70e51e39,	
		0x424c3fcd35d82cbd,	0x18bc25dd4f5700fd,	0x7dfc0f091ab25aac,	0x11d2253f44a123dc,	0x46216ba752211966,	0x52897b37232e2aff,	
		0x52ec6b03524e0abf,	0x23ad1e51097d572c,	0x62c3159c29fa3282,	0x2283557876e77899,	0x7dbd2965735115b8,	0x51cf1abe20bf5bd7,	
		0x30073eb433ea5f1f,	0x744738185dfd5f64,	0x62677d851f623ba9,	0x1bf957ab32b27077,	0x72d55f6175d869e6,	0x75a636bf42b41c42,	
		0x208416e365286b23,	0x2f4442ef564a0bf5,	0x6bd94bf551a75bef,	0x622f6fb036d33252,	0x70ec11865b1a152f,	0x082e3e370f801366
	   };
	const unsigned char MagicBishopShift[] = {
		//Dan's 11s
		53, 53, 53, 53, 53, 53, 53, 53, 
		53, 53, 53, 53, 53, 53, 53, 53, 
		53, 53, 53, 53, 53, 53, 53, 53, 
		53, 53, 53, 53, 53, 53, 53, 53, 
		53, 53, 53, 53, 53, 53, 53, 53, 
		53, 53, 53, 53, 53, 53, 53, 53, 
		53, 53, 53, 53, 53, 53, 53, 53, 
		53, 53, 53, 53, 53, 53, 53, 53 
	};
	const bitboard MagicBishopNumbers[64] = {	
		// Dan's 11 bit magics
		0x678418be48230029,	0x72ae2cd63d6c4ae1,	0x6df116495f906952,	0x01eb26e941bb5af1,	
		0x153c12db2ea60bb3,	0x00990f3e390c7e87,	0x491c440d305e0124,	0x54de15474db74d06,	0x26a6428b66bb6443,	0x767d7a5a5d03701f,	
		0x1e1f3b2512384509,	0x6bfc63cb1ad46e5d,	0x030a6b89260d2213,	0x073256ae0bdb301c,	0x22ee2350759a0120,	0x5cfd6b3658784b40,	
		0x3bf65f321a493e12,	0x0ddc5f49797d3a9e,	0x7eb7423066c4366b,	0x73da121f798b12e1,	0x047e6ad62f140fbf,	0x2c49465775ef7983,	
		0x261e7dd122cd3a61,	0x61721916489c5e9d,	0x71f0401d32e66b72,	0x0677494a7f4f0384,	0x50396be818d74402,	0x0bb57e0620fd41d8,	
		0x45f45b4053cf3e62,	0x0f5577785a173a32,	0x25075a5a1b02022e,	0x697870713c277853,	0x36402ae444923d23,	0x6cb5549c45bc7ca4,	
		0x74b942a910ba0cab,	0x57302ecf5de12f85,	0x6d2e40ae7fb75781,	0x784c7a386cd95b87,	0x00ed4a025e2a0ceb,	0x25311a5013a16146,	
		0x1ceb3d353afa7f31,	0x5e2f3c5c47c47502,	0x65641ba777cc6751,	0x34a112a4020079a0,	0x24bf7b1263c262b0,	0x210a3f823344485b,	
		0x2aad67af44a96219,	0x04587dd8361078f4,	0x0943240b1c540f41,	0x778277764e9b08f0,	0x48ab70a62b610efc,	0x2b784bba1ab6238f,	
		0x48324347782d5154,	0x530f3a441f905736,	0x18bf3d2331d2416a,	0x39421e41264513af,	0x04fc31807c0d68d4,	0x300b6b321fd52b7b,	
		0x4fd8663a59c14c1e,	0x56ec156d57a3184f,	0x716a4a9b35f70f92,	0x4d7b181225c91a39,	0x4d8c7a38127c66e1,	0x0e7732da30bd3815
	};
	#endif

	extern bitboard MagicRookMoves[64][MAGIC_ROOK_SIZE];
	extern bitboard MagicBishopMoves[64][MAGIC_BISHOP_SIZE];

};

//short bitcnt(bitboard * bb);
unsigned char bitcount(bitboard bb);

//short bitscan_lsb(bitboard * bb);
unsigned char bitscan_lsb(bitboard bb);

//short bitscan_msb(bitboard * bb);
unsigned char bitscan_msb(bitboard bb);
//unsigned char bitscan_msb2(bitboard bb);

//bool bitcheck(bitboard * bb, short index);
bool bitcheck(bitboard bb, unsigned char index);

void bitprint(bitboard bb);

void populateMagicRookArray() ;
void populateMagicBishopArray() ;
void initializeMagicBishops() ;

#endif