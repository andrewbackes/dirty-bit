#ifndef evaluate_h
#define evaluate_h

#include "board.h"
#include "hash.h"

#define ENDGAME 13

short phase_gauge(CHESSBOARD * b);
short interpolate(short, short, short);

int contempt(CHESSBOARD * b);

int evaluate_old(CHESSBOARD *b, int alpha= -INFTY, int beta = INFTY);
int evaluate(CHESSBOARD *b, bool side_to_move);

bool insufficientMaterial(CHESSBOARD *b);

int materialScore(CHESSBOARD * b);

class MaterialTable {
public:
	MaterialTable() {
		pawns[0] = 0; pawns[1] = 0; knights[0] = 0; knights[1] = 0; bishops[0] = 0; bishops[1] = 0; rooks[0] = 0; rooks[1] = 0; queens[0] = 0; queens[1] = 0;}
	unsigned char pawns[2];
	unsigned char knights[2];
	unsigned char bishops[2];
	unsigned char rooks[2];
	unsigned char queens[2];

	unsigned char total_pawns() { return (pawns[WHITE]+pawns[BLACK]); }
	bool no_pieces(bool color) { return ( (knights[color] | bishops[color] | rooks[color] | queens[color]) == 0 ); }
};

namespace PawnEval {
	//void PawnEval(CHESSBOARD *b, short &opening_score, short &endgame_score);
	void Opening(CHESSBOARD *b, short &opening_bonus, short &endgame_bonus, PAWNSTRUCTURE &pawn_structure);
	void Endgame(CHESSBOARD *b, short &opening_bonus, short &endgame_bonus, PAWNSTRUCTURE &pawn_structure);
	void PawnEnding(CHESSBOARD * b, short &opening_bonus, short &endgame_bonus, PAWNSTRUCTURE &pawn_structure);

	short Shelter(CHESSBOARD *b, unsigned char square);
};
const short nPieceValue[9] = {0,PAWN_VALUE,KNIGHT_VALUE,KING_VALUE,0,BISHOP_VALUE,ROOK_VALUE,QUEEN_VALUE,0};

extern unsigned char shelter_score[4096];

//See https://chessprogramming.wikispaces.com/Simplified+evaluation+function

#ifdef NEW_PSTS
const int nSquareValue[2][8][64] = {
	//WHITE:
	{
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		//Pawns:
		{
			0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, -12, -12, 0, 0, 0,
			2, 2, 2, 10, 10, 2, 2, 2,
			4, 4, 4, 13, 13, 4, 4, 4,
			6, 6, 6, 16, 16, 6, 6, 6,
			10, 10, 10, 30, 30, 10, 10, 10,
			60, 60, 60, 60, 60, 60, 60, 60,
			0, 0, 0, 0, 0, 0, 0, 0

		},
		//Knights:
		{
			-19, -19, -19, -19, -19, -19, -19, -19,
			-1, 2, 2, 2, 2, 2, 2, -1,
			-1, 2, 19, 17, 17, 19, 2, -1,
			-1, 12, 21, 24, 24, 21, 12, -1,
			-1, 14, 23, 28, 28, 23, 14, -1,  /* [mg][white][64] */
			-1, 14, 23, 27, 27, 23, 14, -1,
			-1, 12, 18, 22, 22, 18, 12, -1,
			-29, -19, -19, -9, -9, -19, -19, -29
		},
		//King (Early/Mid Game):
		{
			20,  30,  10,   0,   0,  10,  30,  20,
			20,  20,   0,   0,   0,   0,  20,  20,
			-10, -20, -20, -20, -20, -20, -20, -10, 
			-20, -30, -30, -40, -40, -30, -30, -20,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30	
		},

		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		//Bishops:
		{
			-10, -10, -8, -6, -6, -8, -10, -10,
			0, 8, 6, 8, 8, 6, 8, 0,
			2, 6, 12, 10, 10, 12, 6, 2,
			4, 8, 10, 16, 16, 10, 8, 4,
			4, 8, 10, 16, 16, 10, 8, 4,   /* [mg][white][64] */
			2, 6, 12, 10, 10, 12, 6, 2,
			0, 8, 6, 8, 8, 6, 8, 0,
			0, 0, 2, 4, 4, 2, 0, 0
		},
		//Rooks:
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

		//Queens:
#ifdef ENABLE_QUEEN_PST
		{
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 2, 2, 2, 2, 0, 0,
				0, 2, 2, 4, 4, 2, 2, 0,
				0, 2, 4, 8, 8, 4, 2, 0,
				0, 2, 4, 8, 8, 4, 2, 0,
				0, 2, 2, 4, 4, 2, 2, 0,
				0, 0, 2, 2, 2, 2, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0

			}
#else if
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
#endif
	},
		//BLACK:
	{
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		//Pawns:
		{
			0, 0, 0, 0, 0, 0, 0, 0,
			60, 60, 60, 60, 60, 60, 60, 60,
			10, 10, 10, 30, 30, 10, 10, 10,
			6, 6, 6, 16, 16, 6, 6, 6,
			4, 4, 4, 13, 13, 4, 4, 4,
			2, 2, 2, 10, 10, 2, 2, 2,
			0, 0, 0, -12, -12, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0
		},
		//Knights:
		{
			- 29, -19, -19, -9, -9, -19, -19, -29,
			-1, 12, 18, 22, 22, 18, 12, -1,
			-1, 14, 23, 27, 27, 23, 14, -1,
			-1, 14, 23, 28, 28, 23, 14, -1,
			-1, 12, 21, 24, 24, 21, 12, -1,
			-1, 2, 19, 17, 17, 19, 2, -1,
			-1, 2, 2, 2, 2, 2, 2, -1,
			-19, -19, -19, -19, -19, -19, -19, -19

		},
		//King (Early/Mid Game):
		{
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-20, -30, -30, -40, -40, -30, -30, -20,
			-10, -20, -20, -20, -20, -20, -20, -10, 
			20,  20,   0,   0,   0,   0,  20,  20,
			20,  30,  10,   0,   0,  10,  30,  20
		},

		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		//Bishops:
		{
			0, 0, 2, 4, 4, 2, 0, 0,
			0, 8, 6, 8, 8, 6, 8, 0,
			2, 6, 12, 10, 10, 12, 6, 2,
			4, 8, 10, 16, 16, 10, 8, 4,
			4, 8, 10, 16, 16, 10, 8, 4,
			2, 6, 12, 10, 10, 12, 6, 2,
			0, 8, 6, 8, 8, 6, 8, 0,
			-10, -10, -8, -6, -6, -8, -10, -10
		},
		//Rooks:
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

		//Queens:
#ifdef ENABLE_QUEEN_PST
		{	
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 2, 2, 2, 2, 0, 0,
				0, 2, 2, 4, 4, 2, 2, 0,
				0, 2, 4, 8, 8, 4, 2, 0,
				0, 2, 4, 8, 8, 4, 2, 0,
				0, 2, 2, 4, 4, 2, 2, 0,
				0, 0, 2, 2, 2, 2, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0
			}
#else if		
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
#endif
	}
};



const int nEndgameKingValue[2][64] =	{
	{
		-30,-18,-18,-18,-18,-18,-18,-30,
		-18,-18,  0,  0,  0,  0,-18,-18,
		-18,-6, 12, 18, 18, 12,-6,-18,
		-18,-6, 18, 24, 24, 18,-6,-18,
		-18,-6, 18, 24, 24, 18,-6,-18,
		-18,-6, 12, 18, 18, 12,-6,-18,
		-18,-12,-6,  0,  0,-6,-12,-18,
		-30,-24,-18,-12,-12,-18,-24,-30
	},
	{
		-30,-24,-18,-12,-12,-18,-24,-30,
		-18,-12,-6,  0,  0,-6,-12,-18,
		-18,-6, 12, 18, 18, 12,-6,-18,
		-18,-6, 18, 24, 24, 18,-6,-18,
		-18,-6, 18, 24, 24, 18,-6,-18,
		-18,-6, 12, 18, 18, 12,-6,-18,
		-18,-18,  0,  0,  0,  0,-18,-18,
		-30,-18,-18,-18,-18,-18,-18,-30
	} }; 


const int nEndgamePawnValue[2][64] = {
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, -12, -12, 0, 0, 0,
		2, 2, 2, 10, 10, 2, 2, 2,
		4, 4, 4, 13, 13, 4, 4, 4,
		6, 6, 6, 16, 16, 6, 6, 6,
		10, 10, 10, 30, 30, 10, 10, 10,
		60, 60, 60, 60, 60, 60, 60, 60,
		0, 0, 0, 0, 0, 0, 0, 0

	},
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		60, 60, 60, 60, 60, 60, 60, 60,
		10, 10, 10, 30, 30, 10, 10, 10,
		6, 6, 6, 16, 16, 6, 6, 6,
		4, 4, 4, 13, 13, 4, 4, 4,
		2, 2, 2, 10, 10, 2, 2, 2,
		0, 0, 0, -12, -12, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0

	} };
#endif

#ifdef TEST_PSTS
const int nSquareValue[2][8][64] = {
	//WHITE:
	{
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		//Pawns:
		{
			0, 0, 0, 0, 0, 0, 0, 0,
			1, 2, 1, -3, -3, 1, 2, 1,
			-1, -1, 0, 0, 0, 0, -1, -1,
			1, 1, 10, 20, 20, 10, 1, 1,
			7, 8, 17, 27, 27, 17, 8, 7,
			9, 12, 25, 40, 40, 25, 12, 9,
			50, 50, 50, 50, 50, 50, 50, 50,
			0, 0, 0, 0, 0, 0, 0, 0
		},
		//Knights:
		{
			-30, -4, -2, -2, -2, -2, -4, -30,
			0, 0, 0, 1, 1, 0, 0, 0,
			0, 0, 10, 15, 15, 10, 0, 0,
			0, 0, 16, 21, 21, 16, 0, 0,
			0, 5, 19, 28, 28, 19, 5, 0,
			0, 8, 10, 15, 15, 10, 8, 0,
			0, 5, 5, 10, 10, 5, 5, 0,
			-30, 1, 1, 1, 1, 1, 1, -30


		},
		//King (Early/Mid Game):
		{
			20, 30, 10, 0, 0, 10, 30, 20,
			20, 20, 0, 0, 0, 0, 20, 20,
			-10, -20, -20, -20, -20, -20, -20, -10,
			-20, -30, -30, -40, -40, -30, -30, -20,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30
		},

		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		//Bishops:
		{
			2, -2, -3, -2, -2, -3, -2, 2,
			0, 8, 4, 8, 8, 4, 8, 0,
			0, 4, 10, 12, 12, 10, 4, 0,
			1, 8, 12, 15, 15, 12, 8, 1,
			1, 8, 12, 16, 16, 12, 8, 1,
			0, 4, 10, 12, 12, 10, 4, 0,
			0, 8, 4, 8, 8, 4, 8, 0,
			3, 1, 1, 2, 2, 1, 1, 3

		},
		//Rooks:
		{
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0
		},
		//Queens:
#ifdef ENABLE_QUEEN_PST
		{
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 2, 2, 2, 2, 0, 0,
				0, 2, 2, 4, 4, 2, 2, 0,
				0, 2, 4, 8, 8, 4, 2, 0,
				0, 2, 4, 8, 8, 4, 2, 0,
				0, 2, 2, 4, 4, 2, 2, 0,
				0, 0, 2, 2, 2, 2, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0

			}
#else
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
#endif
	},
		//BLACK:
	{
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		//Pawns:
		{
			0,	0,	0,	0,	0,	0,	0,	0,
			50, 50, 50, 50, 50, 50, 50, 50,
			9,	12, 25, 40, 40, 25, 12, 9,
			7,	8,	17,	27, 27, 17, 8,	7,
			1,	1,	10,	20, 20, 10,	1,	1,
		   -1, -1,	0,	0,	0,  0, -1, -1,
			1,	2,	1, -3, -3,	1,	2,	1,
			0,	0,	0,	0,	0,	0,	0,	0
		},
		//Knights:
		{
			-30,  1,   1,    1,   1,   1,   1,  -30,
			 0,   5,   5,	10,	 10,  5,   5,  0,
			 0,   8,   10,	15,  15,  10,  8,   0,
			 0,   5,   19,	28,  28,  19,  5,   0,
			 0,   0,   16,	21,  21,  16,  0,   0,
			 0,   0,   10,	15,  15,  10,  0,   0,
			 0,   0,   0,	1,	 1,   0,   0,   0,
			-30, -4,  -2,  -2,  -2,  -2,  -4,  -30
		},
		//King (Early/Mid Game):
		{
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-20, -30, -30, -40, -40, -30, -30, -20,
			-10, -20, -20, -20, -20, -20, -20, -10,
			20, 20, 0, 0, 0, 0, 20, 20,
			20, 30, 10, 0, 0, 10, 30, 20
		},

		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		//Bishops:
		{
			 3,  1, 1,   2,  2,  1,  1,  3,
			 0,  8, 4,   8,  8,  4,  8,  0,
			 0,  4, 10, 12, 12,  10, 4,  0,
			 1,  8, 12, 16, 16,  12, 8,  1,
			 1,  8, 12, 15, 15,  12, 8,  1,
			 0,  4, 10, 12, 12,  10, 4,  0,
			 0,  8,  4,  8,  8,  4,  8,  0,
			 2, -2, -3, -2, -2, -3, -2,  2
		},
		//Rooks:
		{ 
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0,
			0, 2, 3, 6, 6, 3, 2, 0 
		},

		//Queens:
#ifdef ENABLE_QUEEN_PST
		{
				0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 2, 2, 2, 2, 0, 0,
				0, 2, 2, 4, 4, 2, 2, 0,
				0, 2, 4, 8, 8, 4, 2, 0,
				0, 2, 4, 8, 8, 4, 2, 0,
				0, 2, 2, 4, 4, 2, 2, 0,
				0, 0, 2, 2, 2, 2, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0
			}
#else		
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
#endif
	}
};



const int nEndgameKingValue[2][64] = {
	{
		-30, -16, -16, -14, -14, -16, -16, -30,
		-16, -12, 0, 0, 0,  0, -12, -16,
		-16,  0, 10, 14, 14, 10, 0, -16,
		-14,  0, 14, 16, 16, 14, 0, -14,
		-14,  0, 14, 16, 16, 14, 0, -14,
		-16,  0, 10, 14, 14, 10, 0, -16,
		-16, -12, 0, 0, 0,   0, -12, -16,
		-30, -16, -16, -14, -14, -16, -16, -30
	},
	{
		-30, -16, -16, -14, -14, -16, -16, -30,
		-16, -12, 0, 0, 0,  0, -12, -16,
		-16,  0, 10, 14, 14, 10, 0, -16,
		-14,  0, 14, 16, 16, 14, 0, -14,
		-14,  0, 14, 16, 16, 14, 0, -14,
		-16,  0, 10, 14, 14, 10, 0, -16,
		-16, -12, 0, 0, 0,   0, -12, -16,
		-30, -16, -16, -14, -14, -16, -16, -30
	} };


const int nEndgamePawnValue[2][64] = {
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		1, 2, 1, -3, -3, 1, 2, 1,
		-1, -1, 0, 0, 0, 0, -1, -1,
		1, 1, 10, 20, 20, 10, 1, 1,
		7, 8, 17, 27, 27, 17, 8, 7,
		9, 12, 25, 40, 40, 25, 12, 9,
		50, 50, 50, 50, 50, 50, 50, 50,
		0, 0, 0, 0, 0, 0, 0, 0
		/*
		0, 0, 0, 0, 0, 0, 0, 0,
		20, 5, -5, -10, -10, -5, 5, 20,
		20, 5, -5, -10, -10, -5, 5, 20,
		25, 10, 0, -5, -5, 0, 10, 25,
		33, 17, 7, 0, 0, 7, 17, 33,
		45, 29, 16, 5, 5, 16, 29, 45,
		66, 66, 60, 50, 50, 60, 66, 66,
		0, 0, 0, 0, 0, 0, 0, 0
		*/
	},
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		50, 50, 50, 50, 50, 50, 50, 50,
		9, 12, 25, 40, 40, 25, 12, 9,
		7, 8, 17, 27, 27, 17, 8, 7,
		1, 1, 10, 20, 20, 10, 1, 1,
		-1, -1, 0, 0, 0, 0, -1, -1,
		1, 2, 1, -3, -3, 1, 2, 1,
		0, 0, 0, 0, 0, 0, 0, 0
		/*
		0,	0,	0,	0,	0,	0,	0,	0,
		66, 66, 60, 50, 50, 60, 66, 66,
		45,	29, 16, 5,  5,  16, 29, 45,
		33,	17,	7,  0,	0,  7,	17,	33,
		25,	10,	0, -5, -5,  0,  10,	25,
		20, 5, -5, -10,-10,-5,  5,  20,
		20,	5, -5, -10,-10,-5,	5,	20,
		0,	0,	0,	0,	0,	0,	0,	0
		*/
	}, };
#endif

#ifdef OLD_PSTS
const int nSquareValue[2][8][64] = { 
	//WHITE:
	{
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		//Pawns:
		{
			0,  0,  0,  0,  0,  0,  0,  0,
			5, 10, 10,-25,-25, 10, 10,  5,
			5, -5,-10,  0,  0,-10, -5,  5,
			0,  0,  0, 25, 25,  0,  0,  0,
			5,  5, 10, 27, 27, 10,  5,  5,
			10, 10, 20, 30, 30, 20, 10, 10,
			50, 50, 50, 50, 50, 50, 50, 50,
			0,	0,	0,	0,	0,	0,	0,	0
		},
		//Knights:
		{
			-50,-40,-30,-30,-30,-30,-40,-50,
			-40,-20,  0,  5,  5,  0,-20,-40,
			-30,  5, 10, 15, 15, 10,  5,-30,
			-30,  0, 15, 20, 20, 15,  0,-30,
			-30,  5, 15, 20, 20, 15,  5,-30,
			-30,  0, 10, 15, 15, 10,  0,-30,
			-40,-20,  0,  0,  0,  0,-20,-40,
			-50,-40,-20,-30,-30,-20,-40,-50
		},
		//King (Early/Mid Game):
		{
			20,  30,  10,   0,   0,  10,  30,  20,
			20,  20,   0,   0,   0,   0,  20,  20,
			-10, -20, -20, -20, -20, -20, -20, -10, 
			-20, -30, -30, -40, -40, -30, -30, -20,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30	
		},

		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		//Bishops:
		{
			-20,-10,-40,-10,-10,-40,-10,-20,
			-10,  5,  0,  0,  0,  0,  5,-10,
			-10, 10, 10, 10, 10, 10, 10,-10,
			-10,  0, 10, 10, 10, 10,  0,-10,
			-10,  5,  5, 10, 10,  5,  5,-10,
			-10,  0,  5, 10, 10,  5,  0,-10,
			-10,  0,  0,  0,  0,  0,  0,-10,
			-20,-10,-10,-10,-10,-10,-10,-20
		},
		//Rooks:
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

		//Queens:
		#ifdef ENABLE_QUEEN_PST
		{
			0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 2, 2, 2, 2, 0, 0,
			0, 2, 2, 4, 4, 2, 2, 0,
			0, 2, 4, 8, 8, 4, 2, 0,
			0, 2, 4, 8, 8, 4, 2, 0,
			0, 2, 2, 4, 4, 2, 2, 0,
			0, 0, 2, 2, 2, 2, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0
		
		}
		#else if
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
#endif
	},
	//BLACK:
	{
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		//Pawns:
		{
			0,	0,	0,	0,	0,	0,	0,	0,
			50, 50, 50, 50, 50, 50, 50, 50,
			10, 10, 20, 30, 30, 20, 10, 10,
			5,  5, 10, 27, 27, 10,  5,  5,
			0,  0,  0, 25, 25,  0,  0,  0,
			5, -5,-10,  0,  0,-10, -5,  5,
			5, 10, 10,-25,-25, 10, 10,  5,
			0,  0,  0,  0,  0,  0,  0,  0
		},
		//Knights:
		{
			-50,-40,-30,-30,-30,-30,-40,-50,
			-40,-20,  0,  0,  0,  0,-20,-40,
			-30,  0, 10, 15, 15, 10,  0,-30,
			-30,  5, 15, 20, 20, 15,  5,-30,
			-30,  0, 15, 20, 20, 15,  0,-30,
			-30,  5, 10, 15, 15, 10,  5,-30,
			-40,-20,  0,  5,  5,  0,-20,-40,
			-50,-40,-20,-30,-30,-20,-40,-50
		},
		//King (Early/Mid Game):
		{
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-30, -40, -40, -50, -50, -40, -40, -30,
			-20, -30, -30, -40, -40, -30, -30, -20,
			-10, -20, -20, -20, -20, -20, -20, -10, 
			 20,  20,   0,   0,   0,   0,  20,  20,
			 20,  30,  10,   0,   0,  10,  30,  20
		},

		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		//Bishops:
		{
			-20,-10,-10,-10,-10,-10,-10,-20,
			-10,  0,  0,  0,  0,  0,  0,-10,
			-10,  0,  5, 10, 10,  5,  0,-10,
			-10,  5,  5, 10, 10,  5,  5,-10,
			-10,  0, 10, 10, 10, 10,  0,-10,
			-10, 10, 10, 10, 10, 10, 10,-10,
			-10,  5,  0,  0,  0,  0,  5,-10,
			-20,-10,-40,-10,-10,-40,-10,-20
		},
		//Rooks:
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

		//Queens:
		#ifdef ENABLE_QUEEN_PST
		{	
			0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 2, 2, 2, 2, 0, 0,
			0, 2, 2, 4, 4, 2, 2, 0,
			0, 2, 4, 8, 8, 4, 2, 0,
			0, 2, 4, 8, 8, 4, 2, 0,
			0, 2, 2, 4, 4, 2, 2, 0,
			0, 0, 2, 2, 2, 2, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0
		}
		#else if		
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
		#endif
	}
};



const int nEndgameKingValue[2][64] =	{
		{
			-30,-18,-18,-18,-18,-18,-18,-30,
			-18,-18,  0,  0,  0,  0,-18,-18,
			-18,-6, 12, 18, 18, 12,-6,-18,
			-18,-6, 18, 24, 24, 18,-6,-18,
			-18,-6, 18, 24, 24, 18,-6,-18,
			-18,-6, 12, 18, 18, 12,-6,-18,
			-18,-12,-6,  0,  0,-6,-12,-18,
			-30,-24,-18,-12,-12,-18,-24,-30
		},
		{
			-30,-24,-18,-12,-12,-18,-24,-30,
			-18,-12,-6,  0,  0,-6,-12,-18,
			-18,-6, 12, 18, 18, 12,-6,-18,
			-18,-6, 18, 24, 24, 18,-6,-18,
			-18,-6, 18, 24, 24, 18,-6,-18,
			-18,-6, 12, 18, 18, 12,-6,-18,
			-18,-18,  0,  0,  0,  0,-18,-18,
			-30,-18,-18,-18,-18,-18,-18,-30
		} }; 


const int nEndgamePawnValue[2][64] = {
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		-25, 10, 10, 5, 5, 10, 10, -25,
		0, -10, -5, 0, 0, -5, -10, 0,
		25, 0, 0, 0, 0, 0, 0, 25,
		27, 10, 10, 5, 5, 10, 10, 27,
		30, 20, 20, 10, 10, 20, 20, 30,
		60, 60, 60, 60, 60, 60, 60, 60,
		0, 0, 0, 0, 0, 0, 0, 0
	},
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		60, 60, 60, 60, 60, 60, 60, 60,
		30, 20, 20, 10, 10, 20, 20, 30,
		27, 10, 10, 5, 5, 10, 10, 27,
		25, 0, 0, 0, 0, 0, 0, 25,
		0, -10, -5, 0, 0, -5, -10, 0,
		-25, 10, 10, 5, 5, 10, 10, -25,
		0, 0, 0, 0, 0, 0, 0, 0,

	} };
#endif

/*

const int nEndgamePawnValue[2][64] = {
	{
		0,	0,	0,	0,	0,	0,	0,  0,
	   -25,-10,-5,  0,	0, -5, -10,-25,
		0,  0,  0,	0,	0,  0,  0,  0,
		25, 0,	0,	0,	0,	0,	0,	25,
		27, 10, 10, 5,	5,	10, 10, 27,
		30, 20, 20, 10, 10, 20, 20, 30,
		60, 60, 60, 60, 60, 60, 60, 60,
		0,	0,	0,	0,	0,	0,	0,	0
		//127, 127, 127, 127, 127, 127, 127, 127
	},
	{
		//127, 127, 127, 127, 127, 127, 127, 127,
		0,	0,	0,	0,	0,	0,	0,	0,
		60, 60, 60, 60, 60, 60, 60, 60,
		30, 20, 20, 10, 10, 20, 20, 30,
		27, 10, 10, 5,	5,	10, 10, 27,
		25, 0,	0,	0,	0,	0,	0,	25,
		0,  0,  0,	0,	0,  0,  0,  0,
	   -25,-10,-5,  0,	0, -5, -10,-25,
		0,	0,	0,	0,	0,	0,	0,	0

	} };
*/
// file:	20,18,16,10,10, 16, 18,20
// row:		0,14,19,26,35,46,59,126
/*
const int passed_pawn_pst[2][64] = {
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7,
		10, 10, 10, 10, 10, 10, 10, 10,
		14, 14, 14, 14, 14, 14, 14, 14,
		19, 19, 19, 19, 19, 19, 19, 19,
		27, 27, 27, 27, 27, 27, 27, 27,
		0, 0, 0, 0, 0, 0, 0, 0
	}, {
		0, 0, 0, 0, 0, 0, 0, 0,
		27, 27, 27, 27, 27, 27, 27, 27,
		19, 19, 19, 19, 19, 19, 19, 19,
		14, 14, 14, 14, 14, 14, 14, 14,
		10, 10, 10, 10, 10, 10, 10, 10,
		7, 7, 7, 7, 7, 7, 7, 7,
		7, 7, 7, 7, 7, 7, 7, 7,
		0, 0, 0, 0, 0, 0, 0, 0
	}
};

const int passed_pawn_pst_endgame[2][64] = {
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		2, 2, 2, 2, 2, 2, 2, 2,
		2, 2, 2, 2, 2, 2, 2, 2,
		5, 5, 5, 5, 5, 5, 5, 5,
		7, 7, 7, 7, 7, 7, 7, 7,
		10, 10, 10, 10, 10, 10, 10, 10,
		14, 14, 14, 14, 14, 14, 14, 14,
		0, 0, 0, 0, 0, 0, 0, 0
	}, {
		0, 0, 0, 0, 0, 0, 0, 0,
		14, 14, 14, 14, 14, 14, 14, 14,
		10, 10, 10, 10, 10, 10, 10, 10,
		7, 7, 7, 7, 7, 7, 7, 7,
		5, 5, 5, 5, 5, 5, 5, 5,
		2, 2, 2, 2, 2, 2, 2, 2,
		2, 2, 2, 2, 2, 2, 2, 2,
		0, 0, 0, 0, 0, 0, 0, 0
	}
};
*/


/*
const int passed_pawn_pst[2][64] = {
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		5, 5, 5, 5, 5, 5, 5, 5,
		10, 9, 8, 7, 7, 8, 9, 10,
		14, 12, 11, 9, 9, 11, 12, 14,
		19, 17, 15, 13, 13, 15, 17, 19,
		27, 24, 21, 19, 19, 21, 24, 27,
		38, 34, 30, 26, 26, 30, 34, 38,
		0, 0, 0, 0, 0, 0, 0, 0
	}, {
		0, 0, 0, 0, 0, 0, 0, 0,
		38, 34, 30, 26, 26, 30, 34, 38,
		27, 24, 21, 19, 19, 21, 24, 27,
		19, 17, 15, 13, 13, 15, 17, 19,
		14, 12, 11, 9, 9, 11, 12, 14,
		10, 9, 8, 7, 7, 8, 9, 10,
		5, 5, 5, 5, 5, 5, 5, 5, 
		0, 0, 0, 0, 0, 0, 0, 0
	}
};
*/
/*
0
39,		29
27,		21
20,		15
14,	12,	11
10, 9,	8
5,	5,	5
0
*/

/*
//Backup:
const int nEndgamePawnValue[2][64] = {
	{
		0,	0,	0,	0,	0,	0,	0,  0,
		-25, 10, 10, 5,	5,	10, 10,-25,
		0, -10,-5,	0,	0, -5, -10, 0,
		25, 0,	0,	0,	0,	0,	0,	25,
		27, 10, 10, 5,	5,	10, 10, 27,
		30, 20, 20, 10, 10, 20, 20, 30,
		60, 60, 60, 60, 60, 60, 60, 60,
		0,	0,	0,	0,	0,	0,	0,	0
	},
	{
		0,	0,	0,	0,	0,	0,	0,	0,
		60, 60, 60, 60, 60, 60, 60, 60,
		30, 20, 20, 10, 10, 20, 20, 30,
		27, 10, 10, 5,	5,	10, 10, 27,
		25, 0,	0,	0,	0,	0,	0,	25,
		0, -10,-5,	0,	0, -5, -10, 0,
		-25, 10, 10, 5,	5,	10, 10,-25,
		0,	0,	0,	0,	0,	0,	0,	0,

	} };

*/
			/*
const int nSquareValue[2][8][64] = { 
	//WHITE:
	{
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		//Pawns:
		{
			0,  0,  0,  0,  0,  0,  0,  0,
			3, 6, 6,-15,-15, 6, 6,  3,
			3, -3,-6,  0,  0,-6, -3,  3,
			0,  0,  0, 15, 15,  0,  0,  0,
			3,  3, 6, 16, 16, 6,  3,  3,
			6, 6, 12, 18, 18, 12, 6, 6,
			30, 30, 30, 30, 30, 30, 30, 30,
			0,  0,  0,  0,  0,  0,  0,  0
		},
		//Knights:
		{
			-30,-24,-18,-18,-18,-18,-24,-30,
			-24,-12,  0,  3,  3,  0,-12,-24,
			-18,  3, 6, 9, 9, 6,  3,-18,
			-18,  0, 9, 12, 12, 9,  0,-18,
			-18,  3, 9, 12, 12, 9,  3,-18,
			-18,  0, 6, 9, 9, 6,  0,-18,
			-24,-12,  0,  0,  0,  0,-12,-24,
			-30,-24,-12,-18,-18,-12,-24,-30
		},
		//King (Early/Mid Game):
		{
			12,  18,  6,   0,   0,  6,  18,  12,
			12,  12,   0,   0,   0,   0,  12,  12,
			-6, -12, -12, -12, -12, -12, -12, -6, 
			-12, -18, -18, -24, -24, -18, -18, -12,
			-18, -24, -24, -30, -30, -24, -24, -18,
			-18, -24, -24, -30, -30, -24, -24, -18,
			-18, -24, -24, -30, -30, -24, -24, -18,
			-18, -24, -24, -30, -30, -24, -24, -18	
		},

		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		//Bishops:
		{
			-12,-6,-24,-6,-6,-24,-6,-12,
			-6,  3,  0,  0,  0,  0,  3,-6,
			-6, 6, 6, 6, 6, 6, 6,-6,
			-6,  0, 6, 6, 6, 6,  0,-6,
			-6,  3,  3, 6, 6,  3,  3,-6,
			-6,  0,  3, 6, 6,  3,  0,-6,
			-6,  0,  0,  0,  0,  0,  0,-6,
			-12,-6,-6,-6,-6,-6,-6,-12
		},
		//Rooks:
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

		//Queens:
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
	},
	//BLACK:
	{
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		//Pawns:
		{
			0,  0,  0,  0,  0,  0,  0,  0,
			30, 30, 30, 30, 30, 30, 30, 30,
			6, 6, 12, 18, 18, 12, 6, 6,
			3,  3, 6, 16, 16, 6,  3,  3,
			0,  0,  0, 15, 15,  0,  0,  0,
			3, -3,-6,  0,  0,-6, -3,  3,
			3, 6, 6,-15,-15, 6, 6,  3,
			0,  0,  0,  0,  0,  0,  0,  0
		},
		//Knights:
		{
			-30,-24,-18,-18,-18,-18,-24,-30,
			-24,-12,  0,  0,  0,  0,-12,-24,
			-18,  0, 6, 9, 9, 6,  0,-18,
			-18,  3, 9, 12, 12, 9,  3,-18,
			-18,  0, 9, 12, 12, 9,  0,-18,
			-18,  3, 6, 9, 9, 6,  3,-18,
			-24,-12,  0,  3,  3,  0,-12,-24,
			-30,-24,-12,-18,-18,-12,-24,-30
		},
		//King (Early/Mid Game):
		{
			-18, -24, -24, -30, -30, -24, -24, -18,
			-18, -24, -24, -30, -30, -24, -24, -18,
			-18, -24, -24, -30, -30, -24, -24, -18,
			-18, -24, -24, -30, -30, -24, -24, -18,
			-12, -18, -18, -24, -24, -18, -18, -12,
			-6, -12, -12, -12, -12, -12, -12, -6, 
			 12,  12,   0,   0,   0,   0,  12,  12,
			 12,  18,  6,   0,   0,  6,  18,  12
		},

		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		//Bishops:
		{
			-12,-6,-6,-6,-6,-6,-6,-12,
			-6,  0,  0,  0,  0,  0,  0,-6,
			-6,  0,  3, 6, 6,  3,  0,-6,
			-6,  3,  3, 6, 6,  3,  3,-6,
			-6,  0, 6, 6, 6, 6,  0,-6,
			-6, 6, 6, 6, 6, 6, 6,-6,
			-6,  3,  0,  0,  0,  0,  3,-6,
			-12,-6,-24,-6,-6,-24,-6,-12
		},
		//Rooks:
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

		//Queens:
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
	}
};

*/
#endif